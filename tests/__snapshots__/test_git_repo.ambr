# serializer version: 1
# name: test_build_manifest
  dict({
    'clusters': list([
      dict({
        'kustomizations': list([
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'podinfo-config',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_releases': list([
              dict({
                'chart': dict({
                  'name': 'podinfo',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'podinfo',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'podinfo',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'apps',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/apps/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'cluster-config',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'flux-system',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/clusters/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
              dict({
                'name': 'test-allow-policy',
              }),
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
              dict({
                'name': 'bitnami',
                'namespace': 'flux-system',
                'repo_type': 'default',
                'url': 'https://charts.bitnami.com/bitnami',
              }),
              dict({
                'name': 'podinfo',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/stefanprodan/charts',
              }),
              dict({
                'name': 'weave-charts',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/weaveworks/charts',
              }),
            ]),
            'name': 'infra-configs',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/configs',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
              dict({
                'chart_ref': dict({
                  'kind': 'OCIRepository',
                  'name': 'kyverno',
                  'namespace': 'flux-system',
                }),
                'name': 'kyverno',
                'namespace': 'kyverno',
              }),
              dict({
                'chart': dict({
                  'name': 'metallb',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'bitnami',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'metallb',
                'namespace': 'metallb',
              }),
              dict({
                'chart': dict({
                  'name': 'weave-gitops',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'weave-charts',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'weave-gitops',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'infra-controllers',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/controllers',
            'secrets': list([
            ]),
          }),
        ]),
        'path': 'tests/testdata/cluster',
      }),
    ]),
  })
# ---
# name: test_cluster_selector_disabled
  dict({
    'clusters': list([
    ]),
  })
# ---
# name: test_helm_release_selector_disabled
  dict({
    'clusters': list([
      dict({
        'kustomizations': list([
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'podinfo-config',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'apps',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/apps/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'cluster-config',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'flux-system',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/clusters/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
              dict({
                'name': 'test-allow-policy',
              }),
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
              dict({
                'name': 'bitnami',
                'namespace': 'flux-system',
                'repo_type': 'default',
                'url': 'https://charts.bitnami.com/bitnami',
              }),
              dict({
                'name': 'podinfo',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/stefanprodan/charts',
              }),
              dict({
                'name': 'weave-charts',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/weaveworks/charts',
              }),
            ]),
            'name': 'infra-configs',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/configs',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'infra-controllers',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/controllers',
            'secrets': list([
            ]),
          }),
        ]),
        'path': 'tests/testdata/cluster',
      }),
    ]),
  })
# ---
# name: test_helm_release_visitor
  dict({
    'clusters': list([
      dict({
        'kustomizations': list([
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'podinfo-config',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_releases': list([
              dict({
                'chart': dict({
                  'name': 'podinfo',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'podinfo',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'podinfo',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'apps',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/apps/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'cluster-config',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'flux-system',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/clusters/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
              dict({
                'name': 'test-allow-policy',
              }),
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
              dict({
                'name': 'bitnami',
                'namespace': 'flux-system',
                'repo_type': 'default',
                'url': 'https://charts.bitnami.com/bitnami',
              }),
              dict({
                'name': 'podinfo',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/stefanprodan/charts',
              }),
              dict({
                'name': 'weave-charts',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/weaveworks/charts',
              }),
            ]),
            'name': 'infra-configs',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/configs',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
              dict({
                'chart_ref': dict({
                  'kind': 'OCIRepository',
                  'name': 'kyverno',
                  'namespace': 'flux-system',
                }),
                'name': 'kyverno',
                'namespace': 'kyverno',
              }),
              dict({
                'chart': dict({
                  'name': 'metallb',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'bitnami',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'metallb',
                'namespace': 'metallb',
              }),
              dict({
                'chart': dict({
                  'name': 'weave-gitops',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'weave-charts',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'weave-gitops',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'infra-controllers',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/controllers',
            'secrets': list([
            ]),
          }),
        ]),
        'path': 'tests/testdata/cluster',
      }),
    ]),
  })
# ---
# name: test_helm_release_visitor.1
  list([
    tuple(
      'tests/testdata/cluster/apps/prod',
      'podinfo',
      'podinfo',
    ),
    tuple(
      'tests/testdata/cluster/infrastructure/controllers',
      'flux-system',
      'weave-gitops',
    ),
    tuple(
      'tests/testdata/cluster/infrastructure/controllers',
      'kyverno',
      'kyverno',
    ),
    tuple(
      'tests/testdata/cluster/infrastructure/controllers',
      'metallb',
      'metallb',
    ),
  ])
# ---
# name: test_helm_repo_selector_disabled
  dict({
    'clusters': list([
      dict({
        'kustomizations': list([
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'podinfo-config',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_releases': list([
              dict({
                'chart': dict({
                  'name': 'podinfo',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'podinfo',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'podinfo',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'apps',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/apps/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'cluster-config',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'flux-system',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/clusters/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
              dict({
                'name': 'test-allow-policy',
              }),
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'infra-configs',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/configs',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
              dict({
                'chart_ref': dict({
                  'kind': 'OCIRepository',
                  'name': 'kyverno',
                  'namespace': 'flux-system',
                }),
                'name': 'kyverno',
                'namespace': 'kyverno',
              }),
              dict({
                'chart': dict({
                  'name': 'metallb',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'bitnami',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'metallb',
                'namespace': 'metallb',
              }),
              dict({
                'chart': dict({
                  'name': 'weave-gitops',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'weave-charts',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'weave-gitops',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'infra-controllers',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/controllers',
            'secrets': list([
            ]),
          }),
        ]),
        'path': 'tests/testdata/cluster',
      }),
    ]),
  })
# ---
# name: test_helm_repo_visitor
  dict({
    'clusters': list([
      dict({
        'kustomizations': list([
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'podinfo-config',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_releases': list([
              dict({
                'chart': dict({
                  'name': 'podinfo',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'podinfo',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'podinfo',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'apps',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/apps/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'cluster-config',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'flux-system',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/clusters/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
              dict({
                'name': 'test-allow-policy',
              }),
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
              dict({
                'name': 'bitnami',
                'namespace': 'flux-system',
                'repo_type': 'default',
                'url': 'https://charts.bitnami.com/bitnami',
              }),
              dict({
                'name': 'podinfo',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/stefanprodan/charts',
              }),
              dict({
                'name': 'weave-charts',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/weaveworks/charts',
              }),
            ]),
            'name': 'infra-configs',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/configs',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
              dict({
                'chart_ref': dict({
                  'kind': 'OCIRepository',
                  'name': 'kyverno',
                  'namespace': 'flux-system',
                }),
                'name': 'kyverno',
                'namespace': 'kyverno',
              }),
              dict({
                'chart': dict({
                  'name': 'metallb',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'bitnami',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'metallb',
                'namespace': 'metallb',
              }),
              dict({
                'chart': dict({
                  'name': 'weave-gitops',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'weave-charts',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'weave-gitops',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'infra-controllers',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/controllers',
            'secrets': list([
            ]),
          }),
        ]),
        'path': 'tests/testdata/cluster',
      }),
    ]),
  })
# ---
# name: test_helm_repo_visitor.1
  list([
    tuple(
      'tests/testdata/cluster/infrastructure/configs',
      'flux-system',
      'bitnami',
    ),
    tuple(
      'tests/testdata/cluster/infrastructure/configs',
      'flux-system',
      'podinfo',
    ),
    tuple(
      'tests/testdata/cluster/infrastructure/configs',
      'flux-system',
      'weave-charts',
    ),
  ])
# ---
# name: test_internal_commands[cluster2]
  dict({
    "Cluster 'tests/testdata/cluster2'": dict({
      "Build 'flux-system/cluster'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/cluster-apps'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/cluster-apps-ingress-nginx'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/cluster-apps-ingress-nginx-certificates'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/cluster-apps-kubernetes-dashboard'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster2/flux (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster-apps'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster2/apps (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster-apps-ingress-nginx'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster2/apps/networking/ingress-nginx/app (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster-apps-ingress-nginx-certificates'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster2/apps/networking/ingress-nginx/certificates (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster-apps-kubernetes-dashboard'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster2/apps/monitoring/kubernetes-dashboard/app (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'tests/testdata/cluster2'": dict({
        'cmds': list([
          "(tests/testdata/cluster2 (abs)) kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$' .",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
    }),
  })
# ---
# name: test_internal_commands[cluster3]
  dict({
    "Cluster 'tests/testdata/cluster3'": dict({
      "Build 'flux-system/namespaces'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/tenants'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Kustomization 'flux-system/namespaces'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster3/namespaces/overlays/cluster3 (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/tenants'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster3/tenants/overlays/cluster3 (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'tests/testdata/cluster3'": dict({
        'cmds': list([
          "(tests/testdata/cluster3 (abs)) kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$' .",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
    }),
  })
# ---
# name: test_internal_commands[cluster4]
  dict({
    "Cluster 'tests/testdata/cluster4'": dict({
      "Build 'flux-system/cluster'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/cluster-apps'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/cluster-apps-kubernetes-dashboard'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster4/flux (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster-apps'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster4/apps (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/cluster-apps-kubernetes-dashboard'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster4/apps/monitoring/kubernetes-dashboard (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'tests/testdata/cluster4'": dict({
        'cmds': list([
          "(tests/testdata/cluster4 (abs)) kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$' .",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
    }),
  })
# ---
# name: test_internal_commands[cluster5]
  dict({
    "Cluster 'tests/testdata/cluster5'": dict({
      "Build 'flux-system/flux-system'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Kustomization 'flux-system/flux-system'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster5/clusters/prod (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'tests/testdata/cluster5'": dict({
        'cmds': list([
          "(tests/testdata/cluster5 (abs)) kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$' .",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
    }),
  })
# ---
# name: test_internal_commands[cluster6]
  dict({
    "Cluster 'tests/testdata/cluster6'": dict({
      "Build 'flux-system/apps'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/flux-system'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Kustomization 'flux-system/apps'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster6/apps (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/flux-system'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster6/cluster (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'tests/testdata/cluster6'": dict({
        'cmds': list([
          "(tests/testdata/cluster6 (abs)) kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$' .",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
    }),
  })
# ---
# name: test_internal_commands[cluster7]
  dict({
    "Cluster 'tests/testdata/cluster7'": dict({
      "Build 'flux-system/apps'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/charts'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/flux-system'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Kustomization 'flux-system/apps'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster7/flux/apps (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/charts'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster7/flux/charts (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/flux-system'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster7/clusters/home (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'tests/testdata/cluster7'": dict({
        'cmds': list([
          "(tests/testdata/cluster7 (abs)) kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$' .",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
    }),
  })
# ---
# name: test_internal_commands[cluster]
  dict({
    "Cluster 'tests/testdata/cluster'": dict({
      "Build 'flux-system/apps'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster/apps/prod (abs)',
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/flux-system'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/infra-configs'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Build 'flux-system/infra-controllers'": dict({
        'cmds': list([
          "kustomize cfg grep 'kind=^(CustomResourceDefinition|Secret)$' --invert-match",
          "kustomize cfg grep 'kind=^(ConfigMap|HelmRepository|HelmRelease|Secret|ClusterPolicy)$'",
        ]),
      }),
      "Kustomization 'flux-system/apps'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster/apps/prod (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/flux-system'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster/clusters/prod (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/infra-configs'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster/infrastructure/configs (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'flux-system/infra-controllers'": dict({
        'cmds': list([
          'flux build tests/testdata/cluster/infrastructure/controllers (abs)',
          "kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$'",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
      "Kustomization 'tests/testdata/cluster'": dict({
        'cmds': list([
          "(tests/testdata/cluster (abs)) kustomize cfg grep 'kind=^(Kustomization|ConfigMap|Secret)$' .",
          "kustomize cfg grep 'spec.sourceRef.kind=GitRepository|OCIRepository'",
          "kustomize cfg grep 'kind=^(ConfigMap|Secret)$'",
        ]),
      }),
    }),
  })
# ---
# name: test_kustomization_selector_disabled
  dict({
    'clusters': list([
      dict({
        'kustomizations': list([
        ]),
        'path': 'tests/testdata/cluster',
      }),
    ]),
  })
# ---
# name: test_kustomization_visitor
  dict({
    'clusters': list([
      dict({
        'kustomizations': list([
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'podinfo-config',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_releases': list([
              dict({
                'chart': dict({
                  'name': 'podinfo',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'podinfo',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'podinfo',
                'namespace': 'podinfo',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'apps',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/apps/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
              dict({
                'name': 'cluster-config',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
            ]),
            'name': 'flux-system',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/clusters/prod',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
              dict({
                'name': 'test-allow-policy',
              }),
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
            ]),
            'helm_repos': list([
              dict({
                'name': 'bitnami',
                'namespace': 'flux-system',
                'repo_type': 'default',
                'url': 'https://charts.bitnami.com/bitnami',
              }),
              dict({
                'name': 'podinfo',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/stefanprodan/charts',
              }),
              dict({
                'name': 'weave-charts',
                'namespace': 'flux-system',
                'repo_type': 'oci',
                'url': 'oci://ghcr.io/weaveworks/charts',
              }),
            ]),
            'name': 'infra-configs',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/configs',
            'secrets': list([
            ]),
          }),
          dict({
            'cluster_policies': list([
            ]),
            'config_maps': list([
            ]),
            'helm_releases': list([
              dict({
                'chart_ref': dict({
                  'kind': 'OCIRepository',
                  'name': 'kyverno',
                  'namespace': 'flux-system',
                }),
                'name': 'kyverno',
                'namespace': 'kyverno',
              }),
              dict({
                'chart': dict({
                  'name': 'metallb',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'bitnami',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'metallb',
                'namespace': 'metallb',
              }),
              dict({
                'chart': dict({
                  'name': 'weave-gitops',
                  'repo_kind': 'HelmRepository',
                  'repo_name': 'weave-charts',
                  'repo_namespace': 'flux-system',
                }),
                'name': 'weave-gitops',
                'namespace': 'flux-system',
              }),
            ]),
            'helm_repos': list([
            ]),
            'name': 'infra-controllers',
            'namespace': 'flux-system',
            'path': 'tests/testdata/cluster/infrastructure/controllers',
            'secrets': list([
            ]),
          }),
        ]),
        'path': 'tests/testdata/cluster',
      }),
    ]),
  })
# ---
# name: test_kustomization_visitor.1
  list([
    tuple(
      'tests/testdata/cluster/apps/prod',
      'flux-system',
      'apps',
    ),
    tuple(
      'tests/testdata/cluster/clusters/prod',
      'flux-system',
      'flux-system',
    ),
    tuple(
      'tests/testdata/cluster/infrastructure/configs',
      'flux-system',
      'infra-configs',
    ),
    tuple(
      'tests/testdata/cluster/infrastructure/controllers',
      'flux-system',
      'infra-controllers',
    ),
  ])
# ---
